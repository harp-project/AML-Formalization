# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
## Use a package of configuration called an orb.
#orbs:
#  # Declare a dependency on the welcome-orb
#  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs

jobs:
  build:
    docker:
      - image: nixos/nix
    steps:
      - run:
          name: "Install git"
          command: |
            nix-channel --update
            nix-env --upgrade
#            nix-env -iA nixpkgs.git
      - checkout
      - run:
          name: "Build"
          command: nix --extra-experimental-features nix-command --extra-experimental-features flakes --print-build-logs build '.#coq-matching-logic' --no-link
      - run:
          name: "FOL -- Build"
          command: nix --extra-experimental-features nix-command --extra-experimental-features flakes --print-build-logs build '.#coq-matching-logic-example-fol' --no-link
      - run:
          name: "Prover Build & Test"
          command: nix --extra-experimental-features nix-command --extra-experimental-features flakes --print-build-logs build '.#coq-matching-logic-mm-exporter' --no-link
      - run:
          name: "Doc"
          command: nix --extra-experimental-features nix-command --extra-experimental-features flakes --print-build-logs build '.#coq-matching-logic-doc' --out-link '../doc-output'
          no_output_timeout: 45m
      - persist_to_workspace:
          root: ../doc-output
          paths: share/doc/coq-matching-logic/doc


  # Inspired by https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/
  docs-deploy:
    docker:
      - image: nixos/nix
    steps:
      #- checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install and configure dependencies
          command: |
            git config user.email "jenda.tusil+ci@gmail.com"
            git config user.name "ci-build"
            nix-env -iA 'nixpkgs.ghp-import'
      - add_ssh_keys:
          fingerprints:
            - "e0:63:b6:98:fc:4d:b8:60:86:71:46:dd:e8:be:84:02"
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            git clone -b "gh-pages" "$CIRCLE_REPOSITORY_URL" gh-pages
            cd gh-pages
            git switch gh-pages
            rm -rf "./branch/${CIRCLE_BRANCH}/"
            cp -R "/tmp/workspace/share/doc/coq-matching-logic/doc/" "./branch/${CIRCLE_BRANCH}/"
            touch "./branch/${CIRCLE_BRANCH}/.nojekyll"
            git add "./branch/${CIRCLE_BRANCH}"
            git commit --amend -m 'Update documentation'
            git push -f origin gh-pages
            #ghp-import --no-jekyll --prefix "branch/${CIRCLE_BRANCH}/" --push /tmp/workspace/share/doc/coq-matching-logic/doc/

workflows:
  # Name the workflow "welcome"
  welcome:
    jobs:
      - build
      - docs-deploy:
          requires:
            - build
          # filters:
          #  branches:
          #    only: master

